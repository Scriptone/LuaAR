const definitiveDeprecated = [
	/^\s*(wait|delay|spawn)\s*(\([^\)]*\))?\s*$/i,
	/\bSetPrimaryPartCFrame\b/i,
	/\bgame\.Chat\b/i,
	/\bGetService\s*\(\s*["']Chat["']\s*\)/i,
	/\bGamePassService\b/i,
	/\bJointsService\b/i,
	/\bPointsService\b/i,
	/\bBodyVelocity\b/i,
	/\bBodyGyro\b/i,
	/\bBodyPosition\b/i,
	/\bBodyAngularVelocity\b/i,
	/\bBodyThrust\b/i,
	/\bBodyForce\b/i,
	/\bCylinderMesh\b/i,
	/\bFindFirstDescendant\b/i,
	/\bFindPartOnRay\b/i,
	/\bFindPartOnRay\b/i,
	/\bFindPartsInRegion3\b/i,
	/\bIntConstrainedValue\b/i,
	/\bRocketPropulsion\b/i,
	/\bSelectionPartLasso\b/i,
	/\bItemChanged\b/i,
	/\bKeyDown\b/i,
	/\bKeyUp\b/i,
	/\bGetModelCFrame\b/i,
]

const incorrectAPI = [
	/\bFindFirst\w*\s*\([^\)]*\)\s*[:.]/i,
	/Instance\.new\s*\(\s*[^,]+,\s*[^)]+\s*\)/i,
	/\bPromptProductPurchaseFinished\b/i,
]

const outputFilter = (input: string, list: RegExp[]) =>
	input.split("\n").filter((line) => list.some((regex) => regex.test(line)))

const autoGeneratedDeprecatedAPI = ref<RegExp[]>([])

const getDeprecatedLuauAPI = async () => {
	try {
		const url = "https://raw.githubusercontent.com/MaximumADHD/Roblox-Client-Tracker/refs/heads/roblox/API-Dump.txt"
		const response = (await $fetch<string>(url)).split("\n")

		const deprecatedLines = response
			.filter((line) => line.includes("[Deprecated]"))
			.map((line) => line.replace(/\[.*?\]|[\t\r]/g, "").trim())

		const extractItems = (prefix: string, regex: RegExp) =>
			deprecatedLines
				.filter((line) => line.startsWith(prefix))
				.map((line) =>
					line
						.replace(prefix, "")
						.replace(/^[^.]+\./, ".")
						.replace(regex, "")
						.trim()
				)

		const classes = extractItems("Class", /\s*:.*$/)

		const properties = deprecatedLines
			.filter((line) => line.startsWith("Property") && !classes.some((cls) => line.includes(cls)))
			.map((line) =>
				line
					.replace("Property ", "")
					.replace(/^[^.]+\./, ".")
					.replace(/\s*:.*$/, "")
					.trim()
			)

		const functions = deprecatedLines
			.filter((line) => line.startsWith("Function") && !classes.some((cls) => line.includes(cls)))
			.map((line) =>
				line
					.replace("Function ", "")
					.replace(/.*:(\w+)\(.*/, "$1\\(")
					.trim()
			)

		const enums = extractItems("EnumItem", /\s*:.*$/)

		autoGeneratedDeprecatedAPI.value = [...classes, ...functions, ...properties, ...enums].map(
			(item) => new RegExp(`\\b${item}\\b`)
		)
	} catch (error) {
		return error
	}
}

getDeprecatedLuauAPI()

export { autoGeneratedDeprecatedAPI, definitiveDeprecated, incorrectAPI, outputFilter }
